import React, { useState } from 'react';

const Navbar = () => {
  const [isOpen, setIsOpen] = useState(false);

  const navItems = [
    { id: 1, text: 'Home' },
    { id: 2, text: 'About Us' },
    { id: 3, text: 'Invest' },
    { id: 4, text: 'News' },
  ];

  return (
    <nav className="fixed w-full z-50 bg-transparent backdrop-filter backdrop-blur-lg bg-opacity-30">
      <div className="container mx-auto flex justify-between items-center px-8 py-4">
        <svg width="130" height="37" viewBox="0 0 130 37" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M1.92082 25.4891C1.00496 23.3441 0.5 20.9812 0.5 18.5C0.5 8.63538 8.4961 0.639404 18.3571 0.639404C24.3943 0.639404 29.7278 3.63044 32.9618 8.21592H12.1815H11.8931L11.7487 8.46561L10.6012 10.45L10.601 10.4503L5.1387 19.9131L5.1386 19.9132L3.98427 21.9148L3.984 21.9152L2.41655 24.6265L2.41591 24.6276L1.92082 25.4891ZM14.0128 17.9725H14.0409L12.9174 19.9164L12.9171 19.9168L11.9068 21.6686H10.7243L15.3369 13.6797L15.3369 13.6795L16.7674 11.2003H34.6603C35.662 13.4266 36.2176 15.8978 36.2176 18.5C36.2176 28.3645 28.2216 36.3606 18.3571 36.3606C14.7466 36.3606 11.389 35.2896 8.58252 33.448L17.5263 17.976H29.1368H29.4255L29.5699 17.726L31.9038 13.6832L31.9039 13.6829L32.3029 12.9909L32.7351 12.2411H31.8697H17.612H17.3232L17.1789 12.4914L16.7801 13.183L16.7799 13.1834L14.4462 17.2224L14.0128 17.9725Z" fill="black" stroke="black" />
          <path d="M48.7472 36.2603V16.0707H45.1917V11.011H48.7472V8.2569C48.7472 6.32198 49.0792 4.7578 49.75 3.57142C50.4174 2.38504 51.3707 1.52704 52.6065 0.990347C53.8423 0.457184 55.3112 0.188837 57.0166 0.188837H59.6718V5.29802H57.9134C56.8118 5.29802 56.0103 5.524 55.5089 5.97595C55.0075 6.4279 54.7568 7.2047 54.7568 8.30633V11.011H70.4375V36.2603H64.4244V16.0707H54.7568V36.2603H48.7472ZM67.4821 7.2047C66.3805 7.2047 65.4695 6.8622 64.7527 6.17721C64.036 5.49222 63.6758 4.64834 63.6758 3.6491C63.6758 2.61455 64.0324 1.77067 64.7527 1.11746C65.4695 0.467776 66.3805 0.139404 67.4821 0.139404C68.6155 0.139404 69.5371 0.464245 70.2362 1.11746C70.9388 1.77067 71.2884 2.61455 71.2884 3.6491C71.2884 4.65187 70.9388 5.49575 70.2362 6.17721C69.5371 6.8622 68.6191 7.2047 67.4821 7.2047Z" fill="black" />
          <path d="M77.4004 36.2605V11.0111H82.7108L83.1628 15.2199C83.929 13.7511 85.0342 12.5824 86.4677 11.7138C87.9048 10.8452 89.6066 10.4109 91.5769 10.4109C93.6142 10.4109 95.3514 10.8381 96.7885 11.6891C98.2255 12.54 99.3342 13.7864 100.122 15.4212C100.905 17.056 101.297 19.0969 101.297 21.5332V36.2605H95.2843V22.084C95.2843 19.9796 94.8147 18.3589 93.8825 17.2255C92.9469 16.0921 91.5628 15.5236 89.7232 15.5236C88.5191 15.5236 87.4422 15.8061 86.4924 16.3745C85.5426 16.943 84.7905 17.7692 84.2397 18.8532C83.6889 19.9372 83.4135 21.2507 83.4135 22.7866V36.264H77.4004V36.2605Z" fill="black" />
          <path d="M116.074 36.8607C114.001 36.8607 112.282 36.5112 110.915 35.8085C109.545 35.1059 108.529 34.1737 107.861 33.0015C107.194 31.8327 106.858 30.5652 106.858 29.1952C106.858 27.5922 107.268 26.2081 108.087 25.0358C108.906 23.8671 110.117 22.9561 111.72 22.3064C113.323 21.6532 115.294 21.3284 117.631 21.3284H123.994C123.994 19.9937 123.81 18.8815 123.443 17.9952C123.076 17.109 122.507 16.4522 121.741 16.0179C120.971 15.5836 119.986 15.3682 118.786 15.3682C117.416 15.3682 116.247 15.679 115.28 16.2933C114.312 16.9112 113.708 17.854 113.475 19.1251H107.558C107.759 17.3208 108.359 15.7778 109.362 14.4926C110.365 13.2073 111.692 12.2046 113.345 11.4878C114.997 10.771 116.808 10.4109 118.779 10.4109C121.151 10.4109 123.171 10.8205 124.841 11.6396C126.511 12.4588 127.789 13.6275 128.672 15.1458C129.558 16.6641 130 18.4931 130 20.6328V36.264H124.894L124.294 32.207C123.958 32.8744 123.535 33.4923 123.016 34.0607C122.497 34.6292 121.903 35.12 121.236 35.5402C120.569 35.9568 119.81 36.2817 118.955 36.5182C118.104 36.7442 117.144 36.8607 116.074 36.8607ZM117.43 32.1011C118.397 32.1011 119.259 31.9246 120.011 31.575C120.763 31.2254 121.413 30.7241 121.964 30.0708C122.514 29.4212 122.942 28.6938 123.242 27.8923C123.542 27.0908 123.743 26.2398 123.842 25.3359V25.2371H118.281C117.112 25.2371 116.145 25.3889 115.375 25.689C114.605 25.9891 114.054 26.3987 113.722 26.9178C113.387 27.4368 113.221 28.0441 113.221 28.7468C113.221 29.4494 113.387 30.0497 113.722 30.551C114.054 31.0524 114.542 31.4373 115.177 31.7021C115.809 31.9669 116.558 32.1011 117.43 32.1011Z" fill="black" />
        </svg>

        <div className="md:hidden">
          <button onClick={() => setIsOpen(!isOpen)} className="text-black focus:outline-none">
            <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d={!isOpen ? "M4 6h16M4 12h16M4 18h16" : "M6 18L18 6M6 6l12 12"}></path>
            </svg>
          </button>
        </div>
        <ul className={`md:flex space-x-6 ${isOpen ? 'block' : 'hidden'} md:block mt-4 md:mt-0`}>
          {navItems.map((item) => (
            <li key={item.id} className="p-4 rounded-xl duration-300 cursor-pointer hover:text-pink-800">
              {item.text}
            </li>
          ))}
        </ul>
        <div className={`md:flex space-x-6 ${isOpen ? 'block' : 'hidden'} md:block mt-4 md:mt-0`}>
          <button className="text-gray-800 hover:text-pink-800 cursor-pointer duration-500 border-4 border-spacing-2 border-blue-600 px-4 py-1 hover:bg-slate-200">Login</button>
        </div>
      </div>
    </nav>
  );
};

export default Navbar;
